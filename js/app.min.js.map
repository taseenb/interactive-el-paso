{"version":3,"file":"app.min.js","sources":["../node_modules/almond/almond.js","vendors/mediator.js","vendors/underscore.js","vendors/text.js","tpl/header.html!text","tpl/content.html!text","tpl/footer.html!text","views/mainView.js","events/resize.js","events/scroll.js","app.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","global","factory","Mediator","this","guidGenerator","S4","Math","random","toString","Subscriber","fn","options","context","channel","Channel","namespace","parent","_subscribers","_channels","_parent","stopped","update","priority","setPriority","addSubscriber","subscriber","stopPropagation","getSubscriber","identifier","x","y","sub","firstHalf","lastHalf","oldIndex","addChannel","hasChannel","returnChannel","removeSubscriber","publish","data","subsBefore","subsAfter","shouldCall","predicate","calls","getChannel","readOnly","namespaceHierarchy","subscribe","channelName","once","remove","Array","on","bind","emit","trigger","off","version","createReduce","dir","iterator","iteratee","memo","keys","currentKey","optimizeCb","isArrayLike","_","createPredicateIndexFinder","array","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","max","min","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","has","contains","root","previousUnderscore","ArrayProto","FuncProto","Function","nativeIsArray","isArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","invoke","method","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","sample","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","defer","throttle","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","string","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","argument","chain","instance","_chain","mixin","valueOf","toJSON","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","defaultHostName","hostname","defaultPort","port","buildMap","masterConfig","strip","content","jsEscape","createXhr","xhr","progId","XMLHttpRequest","ActiveXObject","parseName","modName","ext","temp","isRelative","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","toLowerCase","finishLoad","onLoad","isBuild","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","node","nodeRequire","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","status","readyState","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","append","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","headerTpl","contentTpl","footerTpl","View","$el","$","el","initialize","App","mediator","onScroll","onResize","title","footer","html","Event","$win","window","width","height","$body","scrollLeft","scrollTop","MainView","mainView"],"mappings":"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","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../node_modules/almond/almond\", function(){});\n\n","/*jslint bitwise: true, nomen: true, plusplus: true, white: true */\n\n/*!\n* Mediator.js Library v0.9.8\n* https://github.com/ajacksified/Mediator.js\n*\n* Copyright 2013, Jack Lawson\n* MIT Licensed (http://www.opensource.org/licenses/mit-license.php)\n*\n* For more information: http://thejacklawson.com/2011/06/mediators-for-modularized-asynchronous-programming-in-javascript/index.html\n* Project on GitHub: https://github.com/ajacksified/Mediator.js\n*\n* Last update: October 19 2013\n*/\n\n(function(global, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define('mediator-js', [], function() {\n      global.Mediator = factory();\n      return global.Mediator;\n    });\n  } else if (typeof exports !== 'undefined') {\n    // Node/CommonJS\n    exports.Mediator = factory();\n  } else {\n    // Browser global\n    global.Mediator = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  // We'll generate guids for class instances for easy referencing later on.\n  // Subscriber instances will have an id that can be refernced for quick\n  // lookups.\n\n  function guidGenerator() {\n    var S4 = function() {\n       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    };\n\n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n  }\n\n  // Subscribers are instances of Mediator Channel registrations. We generate\n  // an object instance so that it can be updated later on without having to\n  // unregister and re-register. Subscribers are constructed with a function\n  // to be called, options object, and context.\n\n  function Subscriber(fn, options, context) {\n    if (!(this instanceof Subscriber)) {\n      return new Subscriber(fn, options, context);\n    }\n\n    this.id = guidGenerator();\n    this.fn = fn;\n    this.options = options;\n    this.context = context;\n    this.channel = null;\n  }\n\n  // Mediator.update on a subscriber instance can update its function,context,\n  // or options object. It takes in an object and looks for fn, context, or\n  // options keys.\n  Subscriber.prototype.update = function(options) {\n    if (options) {\n      this.fn = options.fn || this.fn;\n      this.context = options.context || this.context;\n      this.options = options.options || this.options;\n      if (this.channel && this.options && this.options.priority !== undefined) {\n          this.channel.setPriority(this.id, this.options.priority);\n      }\n    }\n  }\n\n\n  function Channel(namespace, parent) {\n    if (!(this instanceof Channel)) {\n      return new Channel(namespace);\n    }\n\n    this.namespace = namespace || \"\";\n    this._subscribers = [];\n    this._channels = {};\n    this._parent = parent;\n    this.stopped = false;\n  }\n\n  // A Mediator channel holds a list of sub-channels and subscribers to be fired\n  // when Mediator.publish is called on the Mediator instance. It also contains\n  // some methods to manipulate its lists of data; only setPriority and\n  // StopPropagation are meant to be used. The other methods should be accessed\n  // through the Mediator instance.\n  Channel.prototype.addSubscriber = function(fn, options, context) {\n    var subscriber = new Subscriber(fn, options, context);\n\n    if (options && options.priority !== undefined) {\n      // Cheap hack to either parse as an int or turn it into 0. Runs faster\n      // in many browsers than parseInt with the benefit that it won't\n      // return a NaN.\n      options.priority = options.priority >> 0;\n\n      if (options.priority < 0) { options.priority = 0; }\n      if (options.priority >= this._subscribers.length) { options.priority = this._subscribers.length-1; }\n\n      this._subscribers.splice(options.priority, 0, subscriber);\n    }else{\n      this._subscribers.push(subscriber);\n    }\n\n    subscriber.channel = this;\n\n    return subscriber;\n  }\n\n  // The channel instance is passed as an argument to the mediator subscriber,\n  // and further subscriber propagation can be called with\n  // channel.StopPropagation().\n  Channel.prototype.stopPropagation = function() {\n    this.stopped = true;\n  }\n\n  Channel.prototype.getSubscriber = function(identifier) {\n    var x = 0,\n        y = this._subscribers.length;\n\n    for(x, y; x < y; x++) {\n      if (this._subscribers[x].id === identifier || this._subscribers[x].fn === identifier) {\n        return this._subscribers[x];\n      }\n    }\n  }\n\n  // Channel.setPriority is useful in updating the order in which Subscribers\n  // are called, and takes an identifier (subscriber id or named function) and\n  // an array index. It will not search recursively through subchannels.\n\n  Channel.prototype.setPriority = function(identifier, priority) {\n    var oldIndex = 0,\n        x = 0,\n        sub, firstHalf, lastHalf, y;\n\n    for(x = 0, y = this._subscribers.length; x < y; x++) {\n      if (this._subscribers[x].id === identifier || this._subscribers[x].fn === identifier) {\n        break;\n      }\n      oldIndex ++;\n    }\n\n    sub = this._subscribers[oldIndex];\n    firstHalf = this._subscribers.slice(0, oldIndex);\n    lastHalf = this._subscribers.slice(oldIndex+1);\n\n    this._subscribers = firstHalf.concat(lastHalf);\n    this._subscribers.splice(priority, 0, sub);\n  }\n\n  Channel.prototype.addChannel = function(channel) {\n    this._channels[channel] = new Channel((this.namespace ? this.namespace + ':' : '') + channel, this);\n  }\n\n  Channel.prototype.hasChannel = function(channel) {\n    return this._channels.hasOwnProperty(channel);\n  }\n\n  Channel.prototype.returnChannel = function(channel) {\n    return this._channels[channel];\n  }\n\n  Channel.prototype.removeSubscriber = function(identifier) {\n    var x = this._subscribers.length - 1;\n\n    // If we don't pass in an id, we're clearing all\n    if (!identifier) {\n      this._subscribers = [];\n      return;\n    }\n\n    // Going backwards makes splicing a whole lot easier.\n    for(x; x >= 0; x--) {\n      if (this._subscribers[x].fn === identifier || this._subscribers[x].id === identifier) {\n        this._subscribers[x].channel = null;\n        this._subscribers.splice(x,1);\n      }\n    }\n  }\n\n    // This will publish arbitrary arguments to a subscriber and then to parent\n    // channels.\n\n  Channel.prototype.publish = function(data) {\n    var x = 0,\n        y = this._subscribers.length,\n        shouldCall = false,\n        subscriber, l,\n        subsBefore,subsAfter;\n\n    // Priority is preserved in the _subscribers index.\n    for(x, y; x < y; x++) {\n      // By default set the flag to false\n      shouldCall = false;\n      subscriber = this._subscribers[x];\n\n      if (!this.stopped) {\n        subsBefore = this._subscribers.length;\n        if (subscriber.options !== undefined && typeof subscriber.options.predicate === \"function\") {\n          if (subscriber.options.predicate.apply(subscriber.context, data)) {\n            // The predicate matches, the callback function should be called\n            shouldCall = true;\n          }\n        }else{\n          // There is no predicate to match, the callback should always be called\n          shouldCall = true;\n        }\n      }\n\n      // Check if the callback should be called\n      if (shouldCall) {\n        // Check if the subscriber has options and if this include the calls options\n        if (subscriber.options && subscriber.options.calls !== undefined) {\n          // Decrease the number of calls left by one\n          subscriber.options.calls--;\n          // Once the number of calls left reaches zero or less we need to remove the subscriber\n          if (subscriber.options.calls < 1) {\n            this.removeSubscriber(subscriber.id);\n          }\n        }\n        // Now we call the callback, if this in turns publishes to the same channel it will no longer\n        // cause the callback to be called as we just removed it as a subscriber\n        subscriber.fn.apply(subscriber.context, data);\n\n        subsAfter = this._subscribers.length;\n        y = subsAfter;\n        if (subsAfter === subsBefore - 1) {\n          x--;\n        }\n      }\n    }\n\n    if (this._parent) {\n      this._parent.publish(data);\n    }\n\n    this.stopped = false;\n  }\n\n  function Mediator() {\n    if (!(this instanceof Mediator)) {\n      return new Mediator();\n    }\n\n    this._channels = new Channel('');\n  }\n\n  // A Mediator instance is the interface through which events are registered\n  // and removed from publish channels.\n\n  // Returns a channel instance based on namespace, for example\n  // application:chat:message:received. If readOnly is true we\n  // will refrain from creating non existing channels.\n  Mediator.prototype.getChannel = function(namespace, readOnly) {\n    var channel = this._channels,\n        namespaceHierarchy = namespace.split(':'),\n        x = 0,\n        y = namespaceHierarchy.length;\n\n    if (namespace === '') {\n      return channel;\n    }\n\n    if (namespaceHierarchy.length > 0) {\n      for(x, y; x < y; x++) {\n\n        if (!channel.hasChannel(namespaceHierarchy[x])) {\n          if (readOnly) {\n            break;\n          } else {\n            channel.addChannel(namespaceHierarchy[x]);\n          }\n        }\n\n        channel = channel.returnChannel(namespaceHierarchy[x]);\n      }\n    }\n\n    return channel;\n  }\n\n  // Pass in a channel namespace, function to be called, options, and context\n  // to call the function in to Subscribe. It will create a channel if one\n  // does not exist. Options can include a predicate to determine if it\n  // should be called (based on the data published to it) and a priority\n  // index.\n\n  Mediator.prototype.subscribe = function(channelName, fn, options, context) {\n    var channel = this.getChannel(channelName || \"\", false);\n\n    options = options || {};\n    context = context || {};\n\n    return channel.addSubscriber(fn, options, context);\n  }\n\n  // Pass in a channel namespace, function to be called, options, and context\n  // to call the function in to Subscribe. It will create a channel if one\n  // does not exist. Options can include a predicate to determine if it\n  // should be called (based on the data published to it) and a priority\n  // index.\n\n  Mediator.prototype.once = function(channelName, fn, options, context) {\n    options = options || {};\n    options.calls = 1;\n\n    return this.subscribe(channelName, fn, options, context);\n  }\n\n  // Returns a subscriber for a given subscriber id / named function and\n  // channel namespace\n\n  Mediator.prototype.getSubscriber = function(identifier, channelName) {\n    var channel = this.getChannel(channelName || \"\", true);\n    // We have to check if channel within the hierarchy exists and if it is\n    // an exact match for the requested channel\n    if (channel.namespace !== channelName) {\n      return null;\n    }\n\n    return channel.getSubscriber(identifier);\n  }\n\n  // Remove a subscriber from a given channel namespace recursively based on\n  // a passed-in subscriber id or named function.\n\n  Mediator.prototype.remove = function(channelName, identifier) {\n    var channel = this.getChannel(channelName || \"\", true);\n    if (channel.namespace !== channelName) {\n      return false;\n    }\n\n    channel.removeSubscriber(identifier);\n  }\n\n  // Publishes arbitrary data to a given channel namespace. Channels are\n  // called recursively downwards; a post to application:chat will post to\n  // application:chat:receive and application:chat:derp:test:beta:bananas.\n  // Called using Mediator.publish(\"application:chat\", [ args ]);\n\n  Mediator.prototype.publish = function(channelName) {\n    var channel = this.getChannel(channelName || \"\", true);\n    if (channel.namespace !== channelName) {\n      return null;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    args.push(channel);\n\n    channel.publish(args);\n  }\n\n  // Alias some common names for easy interop\n  Mediator.prototype.on = Mediator.prototype.subscribe;\n  Mediator.prototype.bind = Mediator.prototype.subscribe;\n  Mediator.prototype.emit = Mediator.prototype.publish;\n  Mediator.prototype.trigger = Mediator.prototype.publish;\n  Mediator.prototype.off = Mediator.prototype.remove;\n\n  // Finally, expose it all.\n\n  Mediator.Channel = Channel;\n  Mediator.Subscriber = Subscriber;\n  Mediator.version = \"0.9.8\";\n\n  return Mediator;\n}));\n\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n","/**\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.12',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!tpl/header.html',[],function () { return '<div id=\"header\">\\n\\n    <h1>\\n        <a href=\"#\"><%= title %></a>\\n    </h1>\\n\\n    <hr>\\n\\n</div>\\n\\n';});\n\n","\ndefine('text!tpl/content.html',[],function () { return '<div id=\"content\">\\n\\n    Content. Here.\\n\\n    <ul>\\n        <li><a href=\"#item/1\">Item 1</a></li>\\n        <li><a href=\"#item/2\">Item 2</a></li>\\n        <li><a href=\"#item/3\">Item 3</a></li>\\n        <li><a href=\"#item/4\">Item 4</a></li>\\n        <li><a href=\"#item/5\">Item 5</a></li>\\n    </ul>\\n\\n</div>';});\n\n","\ndefine('text!tpl/footer.html',[],function () { return '<div id=\"footer\">\\n\\n    <hr>\\n    Footer.\\n\\n</div>\\n';});\n\n","define( 'views/mainView.js',['require','underscore','text!tpl/header.html','text!tpl/content.html','text!tpl/footer.html'],function ( require ) {\n\n  'use strict';\n\n  var _ = require( 'underscore' );\n\n  var headerTpl = require( 'text!tpl/header.html' );\n  var contentTpl = require( 'text!tpl/content.html' );\n  var footerTpl = require( 'text!tpl/footer.html' );\n\n  var View = function () {\n\n    this.$el = $(this.el);\n    this.initialize();\n  };\n\n  View.prototype = {\n\n    el: '#main',\n\n    initialize: function () {\n      App.mediator.subscribe( 'scroll', this.onScroll.bind( this ) );\n      App.mediator.subscribe( 'resize', this.onResize.bind( this ) );\n    },\n\n    render: function () {\n      var header = _.template( headerTpl )( {\n        title: 'My App'\n      } );\n      var content = _.template( contentTpl )();\n      var footer = _.template( footerTpl )();\n\n      var html = header + content + footer;\n      this.$el.html( html );\n    },\n\n    onScroll: function ( e ) {\n      //      console.log(e);\n    },\n\n    onResize: function ( e ) {\n      //      console.log(e);\n    }\n  };\n\n  return View;\n\n} );\n","define('resize',['require','underscore'],function(require){\n\n  var _ = require('underscore');\n\n  var Event = function() {\n    this.initialize();\n  };\n\n  Event.prototype = {\n    initialize: function() {\n      this.$win = $(window);\n      this.callback = _.debounce(this.onResize, 250).bind(this);\n\n      this.$win.on('resize', this.callback);\n    },\n    onResize: function() {\n      App.mediator.publish('resize', {\n        width: this.$win.width(),\n        height: this.$win.height()\n      });\n    }\n  };\n\n  return new Event();\n\n});\n","define('scroll',['require','underscore'],function(require){\n\n  var _ = require('underscore');\n\n  var Event = function() {\n    this.initialize();\n  };\n\n  Event.prototype = {\n    initialize: function() {\n      this.$body = $('body');\n      this.callback = _.throttle(this.onScroll, 100).bind(this);\n\n      $(window).on('scroll', this.callback);\n    },\n    onScroll: function() {\n      App.mediator.publish('scroll', {\n        scrollLeft: this.$body.scrollLeft(),\n        scrollTop: this.$body.scrollTop()\n      });\n    }\n  };\n\n  return new Event();\n\n});\n","define('app',['require','mediator-js','views/mainView.js','resize','scroll'],function (require) {\n\n  'use strict';\n\n  var Mediator = require('mediator-js');\n  var MainView = require('views/mainView.js');\n\n  // Create App global\n  window.App = window.App || {};\n\n  // Global Events - pub/sub\n  App.mediator = new Mediator();\n  require('resize');\n  require('scroll');\n\n  // Start router\n  var mainView = new MainView();\n  mainView.render();\n\n});\n"]}